var w=Object.create,r=Object.defineProperty,m=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty,f=Object.getOwnPropertyNames,L=Object.getOwnPropertyDescriptor;var d=s=>r(s,"__esModule",{value:!0});var v=(s,e)=>{for(var t in e)r(s,t,{get:e[t],enumerable:!0})},y=(s,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of f(e))!P.call(s,i)&&i!=="default"&&r(s,i,{get:()=>e[i],enumerable:!(t=L(e,i))||t.enumerable});return s},h=s=>y(d(r(s!=null?w(m(s)):{},"default",s&&s.__esModule&&"default"in s?{get:()=>s.default,enumerable:!0}:{value:s,enumerable:!0})),s);d(exports);v(exports,{LOG_VIEW_TYPE:()=>n,default:()=>V});var l=h(require("obsidian")),p=h(require("child_process")),n="supercollider-log-view",k={sclangPath:"/Applications/SuperCollider.app/Contents/MacOS/sclang"},c=class extends l.Plugin{constructor(){super(...arguments);this.sclangProcess=null;this.logView=null}async onload(){await this.loadSettings(),this.registerView(n,e=>new C(e)),this.addRibbonIcon("codesandbox","Toggle SuperCollider",async()=>{this.sclangProcess?(this.stopSclang(),this.closeLogView()):(this.startSclang(),this.activateLogView())}),this.addCommand({id:"run-supercollider-code",name:"Run SuperCollider Code",editorCallback:e=>{let t=e.getCursor(),i=e.getLine(t.line);i.trim()?this.runSuperColliderCode(i.trim()):new l.Notice("No code on the current line to run.")}}),this.addCommand({id:"evaluate-supercollider-block",name:"Evaluate SuperCollider Block",editorCallback:e=>{let t=e.getCursor(),i=e.getValue().split(`
`),o=t.line,a=t.line;for(;o>0&&!i[o].trim().startsWith("(");)o--;for(;a<i.length&&!i[a].trim().endsWith(")");)a++;let g=i.slice(o,a+1).join(`
`);if(g.trim()){let S=`(${g.trim()})`;this.runSuperColliderCode(S)}else new l.Notice("No block detected.")}}),this.addCommand({id:"send-cmdperiod",name:"Send CmdPeriod Command",callback:()=>{this.runSuperColliderCode("CmdPeriod.run;")}}),this.addSettingTab(new u(this.app,this))}onunload(){this.stopSclang(),this.app.workspace.detachLeavesOfType(n)}startSclang(){this.sclangProcess||(this.sclangProcess=(0,p.spawn)(this.settings.sclangPath,[],{shell:!0}),this.sclangProcess.stdout.on("data",e=>{let t=e.toString();this.logView?.addLog(t)}),this.sclangProcess.stderr.on("data",e=>{let t=e.toString();this.logView?.addLog(`[Error]: ${t}`)}),this.sclangProcess.on("close",()=>{this.sclangProcess=null}))}stopSclang(){this.sclangProcess&&(this.sclangProcess.kill(),this.sclangProcess=null)}async runSuperColliderCode(e){this.sclangProcess||(new l.Notice("sclang process is not running. Starting it now..."),this.startSclang()),this.sclangProcess?.stdin.write(`${e}
`)}async activateLogView(){let e=this.app.workspace.activeLeaf;if(!e)return;let t=this.app.workspace.createLeafBySplit(e,"vertical",!1);if(t){await t.setViewState({type:n,active:!0}),this.app.workspace.revealLeaf(t);let i=t.view;i&&(this.logView=i)}}async closeLogView(){this.app.workspace.detachLeavesOfType(n),this.logView=null}async loadSettings(){this.settings=Object.assign({},k,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},V=c,u=class extends l.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"SuperCollider Plugin Settings"}),new l.Setting(e).setName("Path to sclang").setDesc("Full path to the sclang executable.").addText(t=>t.setPlaceholder("Path to sclang").setValue(this.plugin.settings.sclangPath).onChange(async i=>{this.plugin.settings.sclangPath=i,await this.plugin.saveSettings()}))}},C=class extends l.ItemView{constructor(e){super(e);this.logContainer=null}getViewType(){return n}getDisplayText(){return"SuperCollider Log"}async onOpen(){this.containerEl.empty(),this.logContainer=this.containerEl.createEl("div",{cls:"supercollider-log-container"}),this.logContainer.style.overflowY="auto",this.logContainer.style.height="100%"}async onClose(){this.containerEl.empty(),this.logContainer=null}addLog(e){if(this.logContainer){let t=this.logContainer.createEl("div",{text:e,cls:"supercollider-log-item"});this.logContainer.scrollTo({top:this.logContainer.scrollHeight,behavior:"smooth"})}}};
